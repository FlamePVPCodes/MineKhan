{
  "extends": ["eslint:recommended"],
  "parserOptions": {
    "ecmaVersion": 2022,
    "sourceType": "module",
    "ecmaFeatures": {}
  },
  "rules": {
    // Possible Errors
    "no-cond-assign": [2, "always"], // Enforce no assignment in conditional expressions
    "no-constant-condition": 2, // Disallow constant conditions in if statements
    "no-dupe-args": 2, // Disallow duplicate function arguments
    "no-dupe-keys": 2, // Disallow duplicate keys in object literals
    "no-duplicate-case": 2, // Disallow duplicate case labels in switch statements
    "no-ex-assign": 2, // Disallow reassigning exceptions in catch clauses
    "no-extra-boolean-cast": 2, // Disallow unnecessary boolean casts
    "no-extra-parens": [2, "all"], // Disallow unnecessary parentheses
    "semi": ["error", "never"], // Require or disallow semicolons
    "no-extra-semi": 2, // Disallow unnecessary semicolons
    "no-func-assign": 2, // Disallow reassigning function declarations
    "no-invalid-regexp": 2, // Disallow invalid regular expression strings
    "no-irregular-whitespace": 2, // Disallow irregular whitespace
    "no-sparse-arrays": 2, // Disallow sparse arrays
    "no-unreachable": 1, // Report unreachable code
    "use-isnan": 2, // Enforce checking for NaN using isNaN()
    "valid-typeof": 2, // Enforce comparing typeof expressions against valid strings
    "no-unexpected-multiline": "error", // Avoid confusing multiline expressions

    // Best Practices
    "eqeqeq": [2, "smart"], // Enforce strict equality (=== and !==)
    "no-unused-expressions": 2, // Disallow unused expressions
    // ... (Other best practices rules)

    // Stylistic Issues
    "yoda": [2, "never", {}], // Enforce non-Yoda style conditions
    "no-unused-vars": ["error", { "args": "all" }], // Disallow unused variables
    "brace-style": [2, "stroustrup", { "allowSingleLine": false }], // Enforce Stroustrup style braces
    // ... (Other stylistic issues rules)

    // ... (Other rules)

    // Overrides for specific files
    "no-import-assign": 0, // Allow import assignment in specific files
    "no-async-promise-executor": 0, // Allow async promise executors in specific files
  },
  "overrides": [
    {
      "files": ["src/"],
      "excludedFiles": ["node_modules/*"]
    }
  ],
  "env": {
    "node": true,
    "es6": true,
    "browser": true
  },
  "globals": {
    "window": "readonly",
    "document": "readonly",
    "alert": "readonly"
  }
}
